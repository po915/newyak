type Userinfo @model {
  id: ID!
  name: String
  gender: String
  dob: String
  bio: String
  avatar: String
  banner: String
  email: String
  phone: String
  website: String
  country: String
  status: String
  createdAt: AWSDateTime!
}

type Contact
  @model
  @key(
    name: "contactByUser"
    fields: ["selfID", "createdAt"]
    queryField: "contactByUser"
  ) {
  id: ID!
  selfID: ID!
  contactID: ID!
  contactInfo: Userinfo @connection(fields: ["contactID"])
  status: String!
  writing: Boolean
  isBlocked: Boolean!
  unseenMsgs: Int
  createdAt: AWSDateTime!
}

type Chat
@model
@key(
  name: "chatByContact"
  fields: ["contactID", "time"]
  queryField: "chatByContact"
)
{
  id: ID!
  contactID: ID
  message: String
  time: AWSDateTime!
  senderID: ID
}

type MediaGroup
  @model
  @key(
    name: "mediaGroupByOwner"
    fields: ["ownerID", "createdAt"]
    queryField: "mediaGroupByOwner"
  ) {
  id: ID!
  ownerID: ID!
  title: String!
  memo: String!
  status: String!
  medias: [Media] @connection(keyName: "mediaByGroup", fields: ["id"])
  createdAt: AWSDateTime
}

type Media
  @model
  @key(
    name: "mediaByGroup"
    fields: ["groupID", "createdAt"]
    queryField: "mediaByGroup"
  ) {
  id: ID!
  groupID: ID!
  type: String!
  path: String!
  createdAt: AWSDateTime
}

# ##########################   Article ##################
type Article
  @model
  @key(
    name: "articleByOwner"
    fields: ["ownerID", "createdAt"]
    queryField: "articleByOwner"
  )
  @key(
    name: "articleByStatus"
    fields: ["status", "createdAt"]
    queryField: "articleByStatus"
  ) {
  id: ID!
  title: String!
  content: String!
  coverImg: String
  likes: Int
  dislikes: Int
  status: String!
  ownerID: ID!
  owner: Userinfo @connection(fields: ["ownerID"])
  comments: [Comment] @connection(keyName: "commentByArticle", fields: ["id"])
  createdAt: AWSDateTime!
}

type Comment
  @model
  @key(
    name: "commentByArticle"
    fields: ["articleID", "createdAt"]
    queryField: "commentByArticle"
  ) {
  id: ID!
  content: String!
  ownerID: ID!
  owner: Userinfo @connection(fields: ["ownerID"])
  articleID: ID!
  replys: [Reply] @connection(keyName: "replyByComment", fields: ["id"])
  createdAt: AWSDateTime!
}

type Reply
  @model
  @key(
    name: "replyByComment"
    fields: ["commentID", "createdAt"]
    queryField: "replyByComment"
  ) {
  id: ID!
  content: String!
  ownerID: ID!
  owner: Userinfo @connection(fields: ["ownerID"])
  commentID: ID!
  createdAt: AWSDateTime!
}
