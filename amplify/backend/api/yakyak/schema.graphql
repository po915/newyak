type Userinfo @model @searchable {
  id: ID!
  name: String
  gender: String
  dob: String
  bio: String
  avatar: String
  banner: String
  email: String
  phone: String
  website: String
  country: String
  status: String
  createdAt: AWSDateTime!
}

type Contact
  @model
  @key(
    name: "contactByUser"
    fields: ["ownerID"]
    queryField: "contactByUser"
  ) {
  id: ID
  ownerID: ID
  friendID: ID
  info: Userinfo @connection(fields: ["friendID"])
  accepted: String
  blocked: Boolean
  unseenMsgs:Boolean
  chats: [Chat] @connection(keyName: "chatByContact", fields: ["id"])
}

type Chat
@model
@key(
  name: "chatByContact",
  fields: ["contactID", "createdAt"],
  queryField: "chatByContact"
)
{
  id: ID
  contactID: ID
  message: String
  createdAt: AWSDateTime
  senderID: ID
}

type Media
  @model
  @key(
    name: "mediaByOwner"
    fields: ["ownerID", "createdAt"]
    queryField: "mediaByOwner"
  )
  {
  id: ID!
  ownerID: ID
  title: String
  type: String
  status: Boolean
  url: String!
  createdAt: AWSDateTime
}

# ##########################   Article ##################
type Article
  @model
  @key(
    name: "articleByOwner"
    fields: ["ownerID", "createdAt"]
    queryField: "articleByOwner"
  )
  @key(
    name: "articleByStatus"
    fields: ["status", "createdAt"]
    queryField: "articleByStatus"
  ) {
  id: ID!
  title: String!
  content: String!
  coverImg: String
  likes: Int
  dislikes: Int
  status: String!
  ownerID: ID!
  owner: Userinfo @connection(fields: ["ownerID"])
  comments: [Comment] @connection(keyName: "commentByArticle", fields: ["id"])
  createdAt: AWSDateTime!
}

type Comment
  @model
  @key(
    name: "commentByArticle"
    fields: ["articleID", "createdAt"]
    queryField: "commentByArticle"
  ) {
  id: ID!
  content: String!
  ownerID: ID!
  owner: Userinfo @connection(fields: ["ownerID"])
  articleID: ID!
  replys: [Reply] @connection(keyName: "replyByComment", fields: ["id"])
  createdAt: AWSDateTime!
}

type Reply
  @model
  @key(
    name: "replyByComment"
    fields: ["commentID", "createdAt"]
    queryField: "replyByComment"
  ) {
  id: ID!
  content: String!
  ownerID: ID!
  owner: Userinfo @connection(fields: ["ownerID"])
  commentID: ID!
  createdAt: AWSDateTime!
}
